LIBPNG_VERSION ?= 1.6.37
LIBJPG_VERSION ?= 9c
OPENJP2_VERSION ?= 2.3.1
LIBTIFF_VERSION ?= 4.0.9
BZIP2_VERSION ?= 1.0.6
LIBWEBP_VERSION ?= 0.6.1
IMAGEMAGICK_VERSION ?= 7.0.10-30

UTIL_LINUX_VERSION ?= 2.33
LIBJPEG_VERSION ?= 9c
LIBXML2_VERSION ?= 2.9.9
GLIB_VERSION ?= 2.58.3
CAIRO_VERSION ?= 1.14.8
LIBCROCO_VERSION ?= 0.6.8
PANGO_VERSION ?= 1.28.4
GDK_PIXBUF_VERSION ?= 2.28.2
LIBFFI_VERSION ?= 3.2.1
LIBRSVG_VERSION ?= 2.26.3
PIXMAN_VERSION ?= 0.38.4
FONTCONFIG_VERSION ?= 2.13.0
FREETYPE_VERSION ?= 2.10.0
HARFBUZZ_VERSION ?= 2.4.0

TARGET_DIR ?= /opt/
PROJECT_ROOT = $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
CACHE_DIR=$(PROJECT_ROOT)build/cache

.ONESHELL:

CONFIGURE = PKG_CONFIG_PATH=$(CACHE_DIR)/lib/pkgconfig \
	./configure \
		CPPFLAGS=-I$(CACHE_DIR)/include \
		LDFLAGS=-L$(CACHE_DIR)/lib \
		--disable-dependency-tracking \
		--disable-shared \
		--enable-static \
		--prefix=$(CACHE_DIR)

## dev tool istallation
init:
	yum install -y gcc gcc-c++ cmake3 intltool flex bison shared-mime-info gperf

## ============== begin new 1 ==========
## util-linux has libmount and libuuid etc

LIBUUID=$(CACHE_DIR)/lib/libuuid.a

UTIL_LINUX_SOURCE=util-linux-$(UTIL_LINUX_VERSION).tar.xz
$(UTIL_LINUX_SOURCE):
	curl -LO https://mirrors.edge.kernel.org/pub/linux/utils/util-linux/v$(UTIL_LINUX_VERSION)/$(UTIL_LINUX_SOURCE)

$(LIBUUID): $(UTIL_LINUX_SOURCE)
	tar xf $<
	cd util-linux*
	$(CONFIGURE) \
		--disable-all-programs \
		--enable-libuuid
	make
	make install

## libxml2

LIBXML2_SOURCE=libxml2-$(LIBXML2_VERSION).tar.gz
LIBXML2=$(CACHE_DIR)/lib/libxml2.a
$(LIBXML2_SOURCE):
	curl -LO ftp://xmlsoft.org/libxml2/$(LIBXML2_SOURCE)

$(LIBXML2): $(LIBXML2_SOURCE)
	tar xf $<
	cd libxml2*
	$(CONFIGURE) \
		--without-history \
		--without-python
	make
	make install

## licroco

LIBCROCO_SOURCE=libcroco-$(LIBCROCO_VERSION).tar.xz
LIBCROCO_MINOR_VERSION=$(basename $(LIBCROCO_VERSION))
LIBCROCO=$(CACHE_DIR)/lib/libcroco-$(LIBCROCO_MINOR_VERSION).a

$(LIBCROCO_SOURCE):
	curl -OL http://ftp.gnome.org/pub/GNOME/sources/libcroco/$(LIBCROCO_MINOR_VERSION)/$(LIBCROCO_SOURCE)

$(LIBCROCO): $(LIBCROCO_SOURCE) $(LIBXML2) $(GLIB)
	tar xf $<
	cd libcroco*
	$(CONFIGURE) \
		--disable-gtk-doc \
		--disable-gtk-doc-html
	make
	make install
## ============== end new 1 ============

## libjpg

LIBJPG_SOURCE=jpegsrc.v$(LIBJPG_VERSION).tar.gz

$(LIBJPG_SOURCE):
	curl -LO http://ijg.org/files/$(LIBJPG_SOURCE)

$(CACHE_DIR)/lib/libjpeg.a: $(LIBJPG_SOURCE)
	tar xf $<
	cd jpeg*
	$(CONFIGURE)
	make
	make install


## libpng

LIBPNG_SOURCE=libpng-$(LIBPNG_VERSION).tar.xz

$(LIBPNG_SOURCE):
	curl -LO http://prdownloads.sourceforge.net/libpng/$(LIBPNG_SOURCE)

$(CACHE_DIR)/lib/libpng.a: $(LIBPNG_SOURCE)
	tar xf $<
	cd libpng*
	$(CONFIGURE)
	make
	make install

# libbz2

BZIP2_SOURCE=bzip2-$(BZIP2_VERSION).tar.gz

$(BZIP2_SOURCE):
	curl -LO http://prdownloads.sourceforge.net/bzip2/bzip2-$(BZIP2_VERSION).tar.gz

$(CACHE_DIR)/lib/libbz2.a: $(BZIP2_SOURCE)
	tar xf $<
	cd bzip2-*
	make libbz2.a
	make install PREFIX=$(CACHE_DIR)

# libtiff

LIBTIFF_SOURCE=tiff-$(LIBTIFF_VERSION).tar.gz

$(LIBTIFF_SOURCE):
	curl -LO http://download.osgeo.org/libtiff/$(LIBTIFF_SOURCE)

$(CACHE_DIR)/lib/libtiff.a: $(LIBTIFF_SOURCE) $(CACHE_DIR)/lib/libjpeg.a
	tar xf $<
	cd tiff-*
	$(CONFIGURE)
	make
	make install

# libwebp

LIBWEBP_SOURCE=libwebp-$(LIBWEBP_VERSION).tar.gz

$(LIBWEBP_SOURCE):
	curl -L https://github.com/webmproject/libwebp/archive/v$(LIBWEBP_VERSION).tar.gz -o $(LIBWEBP_SOURCE)

$(CACHE_DIR)/lib/libwebp.a: $(LIBWEBP_SOURCE)
	tar xf $<
	cd libwebp-*
	sh autogen.sh
	$(CONFIGURE)
	make
	make install

## libopenjp2

OPENJP2_SOURCE=openjp2-$(OPENJP2_VERSION).tar.gz

$(OPENJP2_SOURCE):
	curl -L https://github.com/uclouvain/openjpeg/archive/v$(OPENJP2_VERSION).tar.gz -o $(OPENJP2_SOURCE)


$(CACHE_DIR)/lib/libopenjp2.a: $(OPENJP2_SOURCE) $(CACHE_DIR)/lib/libpng.a $(CACHE_DIR)/lib/libtiff.a
	tar xf $<
	cd openjpeg-*
	mkdir -p build
	cd build
	PKG_CONFIG_PATH=$(CACHE_DIR)/lib/pkgconfig cmake .. \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_PREFIX=$(CACHE_DIR) \
		-DBUILD_SHARED_LIBS:bool=off \
		-DBUILD_CODEC:bool=off
	make clean
	make install


## =============== begin new ===================

FREETYPE_SOURCE=freetype-$(FREETYPE_VERSION).tar.gz
LIBFREETYPE=$(CACHE_DIR)/lib/libfreetype.a
HARFBUZZ_SOURCE=harfbuzz-$(HARFBUZZ_VERSION).tar.bz2
LIBHARFBUZZ=$(CACHE_DIR)/lib/libharfbuzz.a

$(FREETYPE_SOURCE):
	curl -LO https://download.savannah.gnu.org/releases/freetype/$(FREETYPE_SOURCE)

$(HARFBUZZ_SOURCE):
	curl -LO https://www.freedesktop.org/software/harfbuzz/release/$(HARFBUZZ_SOURCE)

FT_WITHOUT_HB_DIR=$(PROJECT_ROOT)build/freetype-$(FREETYPE_VERSION)-without-harfbuzz
FT_WITHOUT_HB=$(FT_WITHOUT_HB_DIR)/objs/.libs/libfreetype.a

$(FT_WITHOUT_HB): $(FREETYPE_SOURCE)
	tar xf $< -C /tmp
	rm -rf $(FT_WITHOUT_HB_DIR)
	mv /tmp/freetype-$(FREETYPE_VERSION) $(FT_WITHOUT_HB_DIR)
	cd $(FT_WITHOUT_HB_DIR)
	$(CONFIGURE) --without-harfbuzz
	make
	make install

$(LIBHARFBUZZ): $(HARFBUZZ_SOURCE) $(FT_WITHOUT_HB)
	tar xf $<
	cd harfbuzz-$(HARFBUZZ_VERSION)
	$(CONFIGURE) \
		--with-freetype
	make
	make install

$(LIBFREETYPE): $(FREETYPE_SOURCE) $(GLIB) $(LIBPNG) $(LIBBZ2) $(LIBHARFBUZZ)
	tar xf $<
	cd freetype-$(FREETYPE_VERSION)
	$(CONFIGURE) \
		--with-harfbuzz \
		--with-png \
		--with-bzip2
	yum install -y gperf
	make distclean clean
	make
	make install

## fontconfig

FONTCONFIG_SOURCE=fontconfig-$(FONTCONFIG_VERSION).tar.bz2
LIBFONTCONFIG=$(CACHE_DIR)/lib/libfontconfig.a

$(FONTCONFIG_SOURCE):
	curl -LO https://www.freedesktop.org/software/fontconfig/release/$(FONTCONFIG_SOURCE)

fontconfig $(LIBFONTCONFIG): $(FONTCONFIG_SOURCE) $(LIBXML2) $(LIBFREETYPE) $(LIBUUID)
	tar xf $<
	cd fontconfig-$(FONTCONFIG_VERSION)
	$(CONFIGURE) --enable-libxml2
	make
	make install

## =============== end new =====================
## ImageMagick

IMAGE_MAGICK_SOURCE=ImageMagick-$(IMAGEMAGICK_VERSION).tar.gz

$(IMAGE_MAGICK_SOURCE):
	curl -L https://github.com/ImageMagick/ImageMagick/archive/$(IMAGEMAGICK_VERSION).tar.gz -o $(IMAGE_MAGICK_SOURCE)


LIBS:=$(CACHE_DIR)/lib/libjpeg.a \
	$(CACHE_DIR)/lib/libpng.a \
	$(CACHE_DIR)/lib/libopenjp2.a \
	$(CACHE_DIR)/lib/libtiff.a \
	$(CACHE_DIR)/lib/libbz2.a \
	$(CACHE_DIR)/lib/libwebp.a \
	$(CACHE_DIR)/lib/libuuid.a \
	$(CACHE_DIR)/lib/libfreetype.a \
	$(CACHE_DIR)/lib/libharfbuzz.a \
	$(CACHE_DIR)/lib/libfontconfig.a

$(TARGET_DIR)/bin/identify: $(IMAGE_MAGICK_SOURCE) $(LIBS)
	tar xf $<
	cd ImageMa*
	PKG_CONFIG_PATH=$(CACHE_DIR)/lib/pkgconfig \
		./configure \
		CPPFLAGS=-I$(CACHE_DIR)/include \
		LDFLAGS=-L$(CACHE_DIR)/lib \
		--disable-dependency-tracking \
		--disable-shared \
		--enable-static \
		--prefix=$(TARGET_DIR) \
		--enable-delegate-build \
		--without-modules \
		--disable-docs \
		--without-magick-plus-plus \
		--without-perl \
		--without-x \
		--disable-openmp
	make clean
	make all
	make install

libs: $(LIBS)

all: $(TARGET_DIR)/bin/identify
